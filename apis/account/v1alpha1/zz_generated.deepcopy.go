//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Account) DeepCopyInto(out *Account) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Account.
func (in *Account) DeepCopy() *Account {
	if in == nil {
		return nil
	}
	out := new(Account)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Account) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountInitParameters) DeepCopyInto(out *AccountInitParameters) {
	*out = *in
	out.AdminNameSecretRef = in.AdminNameSecretRef
	if in.AdminPasswordSecretRef != nil {
		in, out := &in.AdminPasswordSecretRef, &out.AdminPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AdminRsaPublicKey != nil {
		in, out := &in.AdminRsaPublicKey, &out.AdminRsaPublicKey
		*out = new(string)
		**out = **in
	}
	if in.AdminUserType != nil {
		in, out := &in.AdminUserType, &out.AdminUserType
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	out.EmailSecretRef = in.EmailSecretRef
	if in.FirstNameSecretRef != nil {
		in, out := &in.FirstNameSecretRef, &out.FirstNameSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.GracePeriodInDays != nil {
		in, out := &in.GracePeriodInDays, &out.GracePeriodInDays
		*out = new(float64)
		**out = **in
	}
	if in.IsOrgAdmin != nil {
		in, out := &in.IsOrgAdmin, &out.IsOrgAdmin
		*out = new(string)
		**out = **in
	}
	if in.LastNameSecretRef != nil {
		in, out := &in.LastNameSecretRef, &out.LastNameSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.MustChangePassword != nil {
		in, out := &in.MustChangePassword, &out.MustChangePassword
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegionGroup != nil {
		in, out := &in.RegionGroup, &out.RegionGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountInitParameters.
func (in *AccountInitParameters) DeepCopy() *AccountInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccountInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountList) DeepCopyInto(out *AccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Account, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountList.
func (in *AccountList) DeepCopy() *AccountList {
	if in == nil {
		return nil
	}
	out := new(AccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountObservation) DeepCopyInto(out *AccountObservation) {
	*out = *in
	if in.AdminRsaPublicKey != nil {
		in, out := &in.AdminRsaPublicKey, &out.AdminRsaPublicKey
		*out = new(string)
		**out = **in
	}
	if in.AdminUserType != nil {
		in, out := &in.AdminUserType, &out.AdminUserType
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	if in.FullyQualifiedName != nil {
		in, out := &in.FullyQualifiedName, &out.FullyQualifiedName
		*out = new(string)
		**out = **in
	}
	if in.GracePeriodInDays != nil {
		in, out := &in.GracePeriodInDays, &out.GracePeriodInDays
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsOrgAdmin != nil {
		in, out := &in.IsOrgAdmin, &out.IsOrgAdmin
		*out = new(string)
		**out = **in
	}
	if in.MustChangePassword != nil {
		in, out := &in.MustChangePassword, &out.MustChangePassword
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegionGroup != nil {
		in, out := &in.RegionGroup, &out.RegionGroup
		*out = new(string)
		**out = **in
	}
	if in.ShowOutput != nil {
		in, out := &in.ShowOutput, &out.ShowOutput
		*out = make([]ShowOutputObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountObservation.
func (in *AccountObservation) DeepCopy() *AccountObservation {
	if in == nil {
		return nil
	}
	out := new(AccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountParameters) DeepCopyInto(out *AccountParameters) {
	*out = *in
	out.AdminNameSecretRef = in.AdminNameSecretRef
	if in.AdminPasswordSecretRef != nil {
		in, out := &in.AdminPasswordSecretRef, &out.AdminPasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.AdminRsaPublicKey != nil {
		in, out := &in.AdminRsaPublicKey, &out.AdminRsaPublicKey
		*out = new(string)
		**out = **in
	}
	if in.AdminUserType != nil {
		in, out := &in.AdminUserType, &out.AdminUserType
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	out.EmailSecretRef = in.EmailSecretRef
	if in.FirstNameSecretRef != nil {
		in, out := &in.FirstNameSecretRef, &out.FirstNameSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.GracePeriodInDays != nil {
		in, out := &in.GracePeriodInDays, &out.GracePeriodInDays
		*out = new(float64)
		**out = **in
	}
	if in.IsOrgAdmin != nil {
		in, out := &in.IsOrgAdmin, &out.IsOrgAdmin
		*out = new(string)
		**out = **in
	}
	if in.LastNameSecretRef != nil {
		in, out := &in.LastNameSecretRef, &out.LastNameSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.MustChangePassword != nil {
		in, out := &in.MustChangePassword, &out.MustChangePassword
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RegionGroup != nil {
		in, out := &in.RegionGroup, &out.RegionGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountParameters.
func (in *AccountParameters) DeepCopy() *AccountParameters {
	if in == nil {
		return nil
	}
	out := new(AccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountRole) DeepCopyInto(out *AccountRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountRole.
func (in *AccountRole) DeepCopy() *AccountRole {
	if in == nil {
		return nil
	}
	out := new(AccountRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccountRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountRoleInitParameters) DeepCopyInto(out *AccountRoleInitParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountRoleInitParameters.
func (in *AccountRoleInitParameters) DeepCopy() *AccountRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccountRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountRoleList) DeepCopyInto(out *AccountRoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AccountRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountRoleList.
func (in *AccountRoleList) DeepCopy() *AccountRoleList {
	if in == nil {
		return nil
	}
	out := new(AccountRoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccountRoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountRoleObservation) DeepCopyInto(out *AccountRoleObservation) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.FullyQualifiedName != nil {
		in, out := &in.FullyQualifiedName, &out.FullyQualifiedName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShowOutput != nil {
		in, out := &in.ShowOutput, &out.ShowOutput
		*out = make([]AccountRoleShowOutputObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountRoleObservation.
func (in *AccountRoleObservation) DeepCopy() *AccountRoleObservation {
	if in == nil {
		return nil
	}
	out := new(AccountRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountRoleParameters) DeepCopyInto(out *AccountRoleParameters) {
	*out = *in
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountRoleParameters.
func (in *AccountRoleParameters) DeepCopy() *AccountRoleParameters {
	if in == nil {
		return nil
	}
	out := new(AccountRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountRoleShowOutputInitParameters) DeepCopyInto(out *AccountRoleShowOutputInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountRoleShowOutputInitParameters.
func (in *AccountRoleShowOutputInitParameters) DeepCopy() *AccountRoleShowOutputInitParameters {
	if in == nil {
		return nil
	}
	out := new(AccountRoleShowOutputInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountRoleShowOutputObservation) DeepCopyInto(out *AccountRoleShowOutputObservation) {
	*out = *in
	if in.AssignedToUsers != nil {
		in, out := &in.AssignedToUsers, &out.AssignedToUsers
		*out = new(float64)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.CreatedOn != nil {
		in, out := &in.CreatedOn, &out.CreatedOn
		*out = new(string)
		**out = **in
	}
	if in.GrantedRoles != nil {
		in, out := &in.GrantedRoles, &out.GrantedRoles
		*out = new(float64)
		**out = **in
	}
	if in.GrantedToRoles != nil {
		in, out := &in.GrantedToRoles, &out.GrantedToRoles
		*out = new(float64)
		**out = **in
	}
	if in.IsCurrent != nil {
		in, out := &in.IsCurrent, &out.IsCurrent
		*out = new(bool)
		**out = **in
	}
	if in.IsDefault != nil {
		in, out := &in.IsDefault, &out.IsDefault
		*out = new(bool)
		**out = **in
	}
	if in.IsInherited != nil {
		in, out := &in.IsInherited, &out.IsInherited
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountRoleShowOutputObservation.
func (in *AccountRoleShowOutputObservation) DeepCopy() *AccountRoleShowOutputObservation {
	if in == nil {
		return nil
	}
	out := new(AccountRoleShowOutputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountRoleShowOutputParameters) DeepCopyInto(out *AccountRoleShowOutputParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountRoleShowOutputParameters.
func (in *AccountRoleShowOutputParameters) DeepCopy() *AccountRoleShowOutputParameters {
	if in == nil {
		return nil
	}
	out := new(AccountRoleShowOutputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountRoleSpec) DeepCopyInto(out *AccountRoleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountRoleSpec.
func (in *AccountRoleSpec) DeepCopy() *AccountRoleSpec {
	if in == nil {
		return nil
	}
	out := new(AccountRoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountRoleStatus) DeepCopyInto(out *AccountRoleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountRoleStatus.
func (in *AccountRoleStatus) DeepCopy() *AccountRoleStatus {
	if in == nil {
		return nil
	}
	out := new(AccountRoleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountSpec) DeepCopyInto(out *AccountSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountSpec.
func (in *AccountSpec) DeepCopy() *AccountSpec {
	if in == nil {
		return nil
	}
	out := new(AccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccountStatus) DeepCopyInto(out *AccountStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccountStatus.
func (in *AccountStatus) DeepCopy() *AccountStatus {
	if in == nil {
		return nil
	}
	out := new(AccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShowOutputInitParameters) DeepCopyInto(out *ShowOutputInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShowOutputInitParameters.
func (in *ShowOutputInitParameters) DeepCopy() *ShowOutputInitParameters {
	if in == nil {
		return nil
	}
	out := new(ShowOutputInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShowOutputObservation) DeepCopyInto(out *ShowOutputObservation) {
	*out = *in
	if in.AccountLocator != nil {
		in, out := &in.AccountLocator, &out.AccountLocator
		*out = new(string)
		**out = **in
	}
	if in.AccountLocatorURL != nil {
		in, out := &in.AccountLocatorURL, &out.AccountLocatorURL
		*out = new(string)
		**out = **in
	}
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.AccountOldURLLastUsed != nil {
		in, out := &in.AccountOldURLLastUsed, &out.AccountOldURLLastUsed
		*out = new(string)
		**out = **in
	}
	if in.AccountOldURLSavedOn != nil {
		in, out := &in.AccountOldURLSavedOn, &out.AccountOldURLSavedOn
		*out = new(string)
		**out = **in
	}
	if in.AccountURL != nil {
		in, out := &in.AccountURL, &out.AccountURL
		*out = new(string)
		**out = **in
	}
	if in.Comment != nil {
		in, out := &in.Comment, &out.Comment
		*out = new(string)
		**out = **in
	}
	if in.ConsumptionBillingEntityName != nil {
		in, out := &in.ConsumptionBillingEntityName, &out.ConsumptionBillingEntityName
		*out = new(string)
		**out = **in
	}
	if in.CreatedOn != nil {
		in, out := &in.CreatedOn, &out.CreatedOn
		*out = new(string)
		**out = **in
	}
	if in.DroppedOn != nil {
		in, out := &in.DroppedOn, &out.DroppedOn
		*out = new(string)
		**out = **in
	}
	if in.Edition != nil {
		in, out := &in.Edition, &out.Edition
		*out = new(string)
		**out = **in
	}
	if in.IsEventsAccount != nil {
		in, out := &in.IsEventsAccount, &out.IsEventsAccount
		*out = new(bool)
		**out = **in
	}
	if in.IsOrgAdmin != nil {
		in, out := &in.IsOrgAdmin, &out.IsOrgAdmin
		*out = new(bool)
		**out = **in
	}
	if in.IsOrganizationAccount != nil {
		in, out := &in.IsOrganizationAccount, &out.IsOrganizationAccount
		*out = new(bool)
		**out = **in
	}
	if in.ManagedAccounts != nil {
		in, out := &in.ManagedAccounts, &out.ManagedAccounts
		*out = new(float64)
		**out = **in
	}
	if in.MarketplaceConsumerBillingEntityName != nil {
		in, out := &in.MarketplaceConsumerBillingEntityName, &out.MarketplaceConsumerBillingEntityName
		*out = new(string)
		**out = **in
	}
	if in.MarketplaceProviderBillingEntityName != nil {
		in, out := &in.MarketplaceProviderBillingEntityName, &out.MarketplaceProviderBillingEntityName
		*out = new(string)
		**out = **in
	}
	if in.MovedOn != nil {
		in, out := &in.MovedOn, &out.MovedOn
		*out = new(string)
		**out = **in
	}
	if in.MovedToOrganization != nil {
		in, out := &in.MovedToOrganization, &out.MovedToOrganization
		*out = new(string)
		**out = **in
	}
	if in.OldAccountURL != nil {
		in, out := &in.OldAccountURL, &out.OldAccountURL
		*out = new(string)
		**out = **in
	}
	if in.OrganizationName != nil {
		in, out := &in.OrganizationName, &out.OrganizationName
		*out = new(string)
		**out = **in
	}
	if in.OrganizationOldURL != nil {
		in, out := &in.OrganizationOldURL, &out.OrganizationOldURL
		*out = new(string)
		**out = **in
	}
	if in.OrganizationOldURLLastUsed != nil {
		in, out := &in.OrganizationOldURLLastUsed, &out.OrganizationOldURLLastUsed
		*out = new(string)
		**out = **in
	}
	if in.OrganizationOldURLSavedOn != nil {
		in, out := &in.OrganizationOldURLSavedOn, &out.OrganizationOldURLSavedOn
		*out = new(string)
		**out = **in
	}
	if in.OrganizationURLExpirationOn != nil {
		in, out := &in.OrganizationURLExpirationOn, &out.OrganizationURLExpirationOn
		*out = new(string)
		**out = **in
	}
	if in.RegionGroup != nil {
		in, out := &in.RegionGroup, &out.RegionGroup
		*out = new(string)
		**out = **in
	}
	if in.RestoredOn != nil {
		in, out := &in.RestoredOn, &out.RestoredOn
		*out = new(string)
		**out = **in
	}
	if in.ScheduledDeletionTime != nil {
		in, out := &in.ScheduledDeletionTime, &out.ScheduledDeletionTime
		*out = new(string)
		**out = **in
	}
	if in.SnowflakeRegion != nil {
		in, out := &in.SnowflakeRegion, &out.SnowflakeRegion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShowOutputObservation.
func (in *ShowOutputObservation) DeepCopy() *ShowOutputObservation {
	if in == nil {
		return nil
	}
	out := new(ShowOutputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShowOutputParameters) DeepCopyInto(out *ShowOutputParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShowOutputParameters.
func (in *ShowOutputParameters) DeepCopy() *ShowOutputParameters {
	if in == nil {
		return nil
	}
	out := new(ShowOutputParameters)
	in.DeepCopyInto(out)
	return out
}
